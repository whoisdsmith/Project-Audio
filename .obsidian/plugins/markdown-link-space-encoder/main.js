/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MarkdownLinkSpaceEncoder
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var MarkdownLinkSpaceEncoder = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "markdown-link-space-encode",
      name: "Encode spaces to %20",
      editorCallback: (editor, view) => {
        let selection = editor.getSelection();
        let replacedSel = selection.replace(/\[[^\]]*\]\([^\)]*\)/g, (match) => {
          let split = match.match(/(\[.*\])(\(.*\))/);
          if (split) {
            return split[1] + split[2].replace(/ /g, "%20");
          }
          return match;
        });
        if (replacedSel === selection) {
          new import_obsidian.Notice("No link in selection or incorrect link formatting!");
        }
        editor.replaceSelection(replacedSel);
      }
    });
  }
  onunload() {
  }
};
